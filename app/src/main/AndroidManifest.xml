<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />


    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- If your app targets Android 13 (API level 33)
         or higher, you must declare the NEARBY_WIFI_DEVICES permission. -->
    <uses-permission
        android:name="android.permission.NEARBY_WIFI_DEVICES"
        android:usesPermissionFlags="neverForLocation"
        tools:targetApi="s" />
    <!-- If your app derives location information from
         Wi-Fi APIs, don't include the "usesPermissionFlags"
         attribute. -->

    <uses-permission
        android:name="android.permission.ACCESS_FINE_LOCATION"
        android:maxSdkVersion="32" />
    <!-- If any feature in your app relies on precise location
         information, don't include the "maxSdkVersion"
         attribute. -->


    <application
        android:name=".LudoApplication"
        android:allowBackup="true"
        android:appCategory="game"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.NaijaLudo.Splash"
        tools:targetApi="31">
        <profileable
            android:shell="true"
            tools:targetApi="33" />
        <meta-data
            android:name="google_analytics_automatics_screen_reporting_enabled"
            android:value="false" />
        <!-- Sample AdMob app ID: ca-app-pub-3940256099942544~3347511713 -->
        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="ca-app-pub-9288865147193743~8922953694" />

        <meta-data
            android:name="com.google.android.gms.games.APP_ID"
            android:value="@string/game_services_project_id" />
        <meta-data
            android:name="firebase_performance_logcat_enabled"
            android:value="true" />

        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <service
            android:name=".MessageService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!-- workaround bug in profileinstaller 1.3.0-alpha02, remove when updating to alpha03+ -->
<!--        <receiver-->
<!--            android:name="androidx.profileinstaller.ProfileInstallReceiver"-->
<!--            android:permission="android.permission.DUMP"-->
<!--            android:exported="true">-->
<!--            <intent-filter>-->
<!--                <action android:name="androidx.profileinstaller.action.BENCHMARK_OPERATION" />-->
<!--            </intent-filter>-->
<!--        </receiver>-->
        <!-- Set custom default icon. This is used when no icon is set for incoming notification messages.
     See README(https://goo.gl/l4GJaQ) for more. -->
<!--        <meta-data-->
<!--            android:name="com.google.firebase.messaging.default_notification_icon"-->
<!--            android:resource="@android:drawable/stat_notify_chat" />-->
<!--        &lt;!&ndash; Set color used with incoming notification messages. This is used when no color is set for the incoming-->
<!--             notification message. See README(https://goo.gl/6BKBk7) for more. &ndash;&gt;-->
<!--        <meta-data-->
<!--            android:name="com.google.firebase.messaging.default_notification_color"-->
<!--            android:resource="#00ff00" />-->
    </application>

</manifest>